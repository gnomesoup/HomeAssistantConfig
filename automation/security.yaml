- id: arm_when_away
  alias: Arm Home When Away
  trigger:
    - platform: state
      entity_id: input_select.presence
      from: "Home"
      to: "Away"
  action:
    - service: ifttt.trigger
      data: {"event":"home_armed"}
    - service: notify.notify
      data:
        message: "System is armed"
- id: disarm_when_home
  alias: Disarm Home When Home
  trigger:
    - platform: state
      entity_id: input_select.presence
      from: "Away"
      to: "Home"
  action:
    - service: homeassistant.turn_off
      entity_id:
        - input_boolean.motion_alert
    - service: ifttt.trigger
      data: {"event":"home_disarmed"}
    - service: notify.notify
      data:
        message: "System is disarmed"

- id: alert_when_wet
  alias: Send Alert When Water Detected
  trigger:
    - platform: state
      entity_id: sensor.water_leak_sensor_water
      from: 'dry'
      to: 'wet'
  action:
    - service: notify.notify
      data_template:
        message: >-
          {{ trigger.to_state.attributes.friendly }} detected water!

- id: alert_when_motion
  alias: Send Alert When Motion And Away
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.aeotec_multisensor_sensor_living_room
        - binary_sensor.aeotec_multisensor_sensor_bedroom
      to: "on"
      for:
        seconds: 30
  condition:
    - condition: state
      entity_id: input_select.presence
      state: "Away"
  action:
    - service: input_boolean.turn_on
      entity_id:
        - input_boolean.motion_alert
    - service: notify.notify
      data:
        message: "Motion Detected"

- id: time_test
  alias: Testing time trigger
  trigger:
    - platform: state
      entity_id:
        - sensor.time
  condition:
    - condition: template
      value_template: >-
        {{ states.input_select.test_day.state == states.sensor.weekday.state and
          states.sensor.time.state == states.input_datetime.time_test.state[0:5] }}
  action:
    - service: input_boolean.toggle
      entity_id: input_boolean.testing
    # - service: notify.notify
    #   data:
    #     message: "Time test triggered"

####################################
# cleaning mode turn on all lights #
####################################

## select "Cleaning" mode when appropriate
- id: setup_cleaning
  alias: Turn on cleaning mode
  trigger:
    - platform: state
      entity_id: sensor.time
  condition:
    - condition: template
      value_template: >-
        {{ states.sensor.weekday.state == states.input_select.clean_day.state and
          states.sensor.time.state == states.input_datetime.clean_start.state[0:5] }}
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.home_mode
        option: "Cleaning"
    - service: notify.notify
      data:
        message: "Waiting for cleaner"

- id: cleaning_welcome
  alias: Welcome cleaner
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.aeotec_multisensor_sensor_living_room
        - binary_sensor.aeotec_multisensor_sensor_bedroom
      to: "on"
  condition:
    - condition: state
      entity_id: input_boolean.cleaner_present
      state: "off"
    - condition: state
      entity_id: input_select.home_mode
      state: "Cleaning"
    - condition: state
      entity_id: input_select.presence
      state: "Away"
  action:
    - service: homeassistant.turn_on
      entity_id:
        - group.lights
        - input_boolean.cleaner_present
    - service: notify.notify
      data:
        message: "The cleaner has arrived"

- id: cleaner_goodbye
  alias: Cleaner Goodbye
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.aeotec_multisensor_sensor_living_room
        - binary_sensor.aeotec_multisensor_sensor_bedroom
      to: "off"
      for:
        minutes: 30
  condition:
    - condition: state
      entity_id: input_boolean.cleaner_present
      state: "on"
    - condition: state
      entity_id: input_select.home_mode
      state: "Cleaning"
  action:
    - service: homeassistant.turn_off
      entity_id:
        - group.lights
        - input_boolean.cleaner_present
    - service: input_select.select_option
      data:
        entity_id: input_select.home_mode
        option: "Normal"
    - service: notify.notify
      data:
        message: "The cleaner has left"

- id: cleaner_no_show
  alias: Cleaner Didn't Show
  trigger:
    - platform: state
      entity_id: sensor.time
  condition:
    - condition: template
      value_template: >-
        {{ states.sensor.time.state == states.input_datetime.clean_end.state[0:5] and
          states.input_select.home_mode == "Cleaning" and
          states.input_boolean.cleaner_present == "off" }}
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.home_mode
        option: "Normal"
    - service: notify.notify
      data:
        message: "The cleaner never showed"

- id: notify_bedroom_door
  alias: Mary's Door Alert
  trigger:
    - platform: template
      value_template: >-
        {{ states.sensor.linear_door_sensor_alarm_level_bedroom.state|float > 0 }}
  condition:
    - condition: state
      entity_id: input_select.mary_status
      state: "Asleep"
    - condition: state
      entity_id: input_boolean.door_alert_suppress
      state: "off"
  action:
    # - service: input_select.select_option
    #   data:
    #     entity_id: input_select.mary_status
    #     option: "Alert"
    # - service: input_boolean.turn_on
    #   entity_id: input_boolean.mary_alert
    - service: script.turn_on
      entity_id: script.maryalert
    - service: tts.google_say
      entity_id: media_player.bedroom_speaker
      data:
        message: "mary's door is open"
    - service: notify.notify
      data:
        message: "Mary's door is open"

- id: notify_front_door
  alias: Front Door Alert
  trigger:
    - platform: template
      value_template: >-
        {{ states.sensor.linear_door_sensor_alarm_level_front.state|float > 0 }}
  condition:
    - condition: state
      entity_id: input_boolean.door_alert_delay
      state: "off"
  action:
    # - service: input_select.select_option
    #   data:
    #     entity_id: input_select.mary_status
    #     option: "Alert"
    # - service: input_boolean.turn_on
    #   entity_id: input_boolean.mary_alert
    - service: script.turn_on
      entity_id: script.maryalert
    - service: tts.google_say
      entity_id: media_player.bedroom_speaker
      data:
        message: "front door is open"
    - service: notify.notify
      data:
        message: "The front door is open"

- id: reset_door_delay
  alias: Door Delay Reset
  trigger:
    - platform: state
      entity_id: input_boolean.door_alert_delay
      to: "on"
  action:
    - service: script.turn_on
      entity_id: script.reset_door_delay
