# door minimote
- id: minimote_door_button1_pushed
  alias: Door Minimote Button 1 Pushed
  trigger:
    - platform: mqtt
      topic: "smartthings/Minimote Door button 1/button"
      payload: "pushed"
  condition:
    - condition: state
      entity_id: input_boolean.mqtt_delay
      state: "off"
  action:
    - service: script.goodmorning
# - id: minimote_door_button1_held
#   alias: Door Minimote Button 1 Pressed
#   trigger:
#     - platform: mqtt
#       topic: "smartthings/Minimote Door button 1/button"
#       payload: "held"
#   condition:
#     - condition: state
#       entity_id: input_boolean.mqtt_delay
#       state: "off"
#   action:
#     - service:
#         script.getmellowed

- id: minimote_door_button2_pushed
  alias: Door Minimote Button 2 Pushed
  trigger:
    - platform: mqtt
      topic: "smartthings/Minimote Door button 2/button"
      payload: "pushed"
  condition:
    - condition: state
      entity_id: input_boolean.mqtt_delay
      state: "off"
  action:
    - service: script.goodbye
# - id: minimote_door_button2_held
#   alias: Door Minimote Button 2 Pressed
#   trigger:
#     - platform: mqtt
#       topic: "smartthings/Minimote Door button 2/button"
#       payload: "held"
#   condition:
#     - condition: state
#       entity_id: input_boolean.mqtt_delay
#       state: "off"
#   action:
#     - service:
#         script.getmellowed

- id: minimote_door_button3_pushed
  alias: Door Minimote Button 3 Pushed
  trigger:
    - platform: mqtt
      topic: "smartthings/Minimote Door button 3/button"
      payload: "pushed"
  condition:
    - condition: state
      entity_id: input_boolean.mqtt_delay
      state: "off"
  action:
    - service:
        script.imback
# - id: minimote_door_button3_held
#   alias: Door Minimote Button 3 Pressed
#   trigger:
#     - platform: mqtt
#       topic: "smartthings/Minimote Door button 3/button"
#       payload: "held"
#   condition:
#     - condition: state
#       entity_id: input_boolean.mqtt_delay
#       state: "off"
#   action:
#     - service:
#         script.getmellowed

- id: minimote_door_button4_pushed
  alias: Door Minimote Button 4 Pushed
  trigger:
    - platform: mqtt
      topic: "smartthings/Minimote Door button 4/button"
      payload: "pushed"
  condition:
    - condition: state
      entity_id: input_boolean.mqtt_delay
      state: "off"
  action:
    - service:
        script.goodnight
# - id: minimote_door_button4_held
#   alias: Door Minimote Button 4 Pressed
#   trigger:
#     - platform: mqtt
#       topic: "smartthings/Minimote Door button 4/button"
#       payload: "held"
#   condition:
#     - condition: state
#       entity_id: input_boolean.mqtt_delay
#       state: "off"
#   action:
#     - service:
#         script.getmellowed

# bedroom minimote
- id: minimote_bedroom_button1_pushed
  alias: Bedroom Minimote Button 1 Pushed
  trigger:
    - platform: mqtt
      topic: "smartthings/Minimote Bedroom button 1/button"
      payload: "pushed"
  condition:
    - condition: state
      entity_id: input_boolean.mqtt_delay
      state: "off"
  action:
    - service: light.toggle
      entity_id: light.bedroom_canopy
- id: minimote_bedroom_button1_held
  alias: Bedroom Minimote Button 1 Pressed
  trigger:
    - platform: mqtt
      topic: "smartthings/Minimote Bedroom button 1/button"
      payload: "held"
  condition:
    - condition: state
      entity_id: input_boolean.mqtt_delay
      state: "off"
  action:
    - service:
        script.bedtime

- id: minimote_bedroom_button2_pushed
  alias: Bedroom Minimote Button 2 Pushed
  trigger:
    - platform: mqtt
      topic: "smartthings/Minimote Bedroom button 2/button"
      payload: "pushed"
  condition:
    - condition: state
      entity_id: input_boolean.mqtt_delay
      state: "off"
  action:
    - service: light.toggle
      entity_id: light.bedroom_closet
- id: minimote_bedroom_button2_held
  alias: Bedroom Minimote Button 2 Pressed
  trigger:
    - platform: mqtt
      topic: "smartthings/Minimote Bedroom button 2/button"
      payload: "held"
  condition:
    - condition: state
      entity_id: input_boolean.mqtt_delay
      state: "off"
  action:
    - service:
        script.goodmorning

- id: minimote_bedroom_button3_pushed
  alias: Bedroom Minimote Button 3 Pushed
  trigger:
    - platform: mqtt
      topic: "smartthings/Minimote Bedroom button 3/button"
      payload: "pushed"
  condition:
    - condition: state
      entity_id: input_boolean.mqtt_delay
      state: "off"
  action:
    - service: light.toggle
      entity_id: light.bedroom_lamp
# - id: minimote_bedroom_button3_held
#   alias: Bedroom Minimote Button 3 Pressed
#   trigger:
#     - platform: mqtt
#       topic: "smartthings/Minimote Bedroom button 3/button"
#       payload: "held"
#   condition:
#     - condition: state
#       entity_id: input_boolean.mqtt_delay
#       state: "off"
#   action:
#     - service:
#         script.getmellowed

- id: minimote_bedroom_button4_pushed
  alias: Bedroom Minimote Button 4 Pushed
  trigger:
    - platform: mqtt
      topic: "smartthings/Minimote Bedroom button 4/button"
      payload: "pushed"
  condition:
    - condition: state
      entity_id: input_boolean.mqtt_delay
      state: "off"
  action:
    - service: light.toggle
      entity_id: light.camilles_desk_lamp
# - id: minimote_bedroom_button4_held
#   alias: Bedroom Minimote Button 4 Pressed
#   trigger:
#     - platform: mqtt
#       topic: "smartthings/Minimote Bedroom button 4/button"
#       payload: "held"
#   condition:
#     - condition: state
#       entity_id: input_boolean.mqtt_delay
#       state: "off"
#   action:
#     - service:
#         script.getmellowed

## Camille's Minimote
- id: minimote_camille_button1_pushed
  alias: Camille Minimote Button 1 Pushed
  trigger:
    - platform: mqtt
      topic: "smartthings/Minimote Camille button 1/button"
      payload: "pushed"
  condition:
    - condition: state
      entity_id: input_boolean.mqtt_delay
      state: "off"
  action:
    - service: light.toggle
      entity_id: light.bedroom_canopy
- id: minimote_camille_button1_held
  alias: Camille Minimote Button 1 Pressed
  trigger:
    - platform: mqtt
      topic: "smartthings/Minimote Camille button 1/button"
      payload: "held"
  condition:
    - condition: state
      entity_id: input_boolean.mqtt_delay
      state: "off"
  action:
    - service:
        script.bedtime

- id: minimote_camille_button2_pushed
  alias: Camille Minimote Button 2 Pushed
  trigger:
    - platform: mqtt
      topic: "smartthings/Minimote Camille button 2/button"
      payload: "pushed"
  condition:
    - condition: state
      entity_id: input_boolean.mqtt_delay
      state: "off"
  action:
    - service: light.toggle
      entity_id: light.bedroom_closet
- id: minimote_camille_button2_held
  alias: Camille Minimote Button 2 Pressed
  trigger:
    - platform: mqtt
      topic: "smartthings/Minimote Camille button 2/button"
      payload: "held"
  condition:
    - condition: state
      entity_id: input_boolean.mqtt_delay
      state: "off"
  action:
    - service:
        script.bedtime

- id: minimote_camille_button3_pushed
  alias: Camille Minimote Button 3 Pushed
  trigger:
    - platform: mqtt
      topic: "smartthings/Minimote Camille button 3/button"
      payload: "pushed"
  condition:
    - condition: state
      entity_id: input_boolean.mqtt_delay
      state: "off"
  action:
    - service: light.toggle
      entity_id: light.bedroom_lamp
- id: minimote_camille_button3_held
  alias: Camille Minimote Button 3 Pressed
  trigger:
    - platform: mqtt
      topic: "smartthings/Minimote Camille button 3/button"
      payload: "held"
  condition:
    - condition: state
      entity_id: input_boolean.mqtt_delay
      state: "off"
  action:
    - service:
        script.bedtime

- id: minimote_camille_button4_pushed
  alias: Camille Minimote Button 4 Pushed
  trigger:
    - platform: mqtt
      topic: "smartthings/Minimote Camille button 4/button"
      payload: "pushed"
  condition:
    - condition: state
      entity_id: input_boolean.mqtt_delay
      state: "off"
  action:
    - service: light.toggle
      entity_id: light.camilles_desk_lamp
- id: minimote_camille_button4_held
  alias: Camille Minimote Button 4 Pressed
  trigger:
    - platform: mqtt
      topic: "smartthings/Minimote Camille button 4/button"
      payload: "held"
  condition:
    - condition: state
      entity_id: input_boolean.mqtt_delay
      state: "off"
  action:
    - service:
        script.bedtime


## CLIMATE ##
# set temperatures on presence
# TODO Add heat to the equation
- id: climate_set_temperatures_cooling
  alias: Set cooling temperature based on presence
  trigger:
    # - platform: homeassistant
    #   event: start
    - platform: state
      entity_id: input_select.presence
    - platform: state
      entity_id: input_select.home_mode
  condition:
    - condition: state
      entity_id: input_select.hvac_mode
      state: "cooling"
  action:
    - service: climate.set_temperature
      entity_id: climate.living_room_thermostat_cool
      data_template:
        temperature: >-
          {% if is_state('input_select.presence', 'Home') %}
            {% if is_state('input_select.home_mode', 'Sleep') %}
              {{ states.input_number.cool_away_living_room_asleep.state }}
            {% else %}
              {{ states.input_number.cool_home_living_room_awake.state }}
            {% endif %}
          {% else %}
            {{ states.input_number.cool_away_living_room_away.state }}
          {% endif %}
    - service: climate.set_temperature
      entity_id: climate.bedroom_thermostat_cool
      data_template:
        temperature: >-
          {% if is_state('input_select.presence', 'Home') %}
            {% if is_state('input_select.home_mode', 'Quiet') %}
              {{ states.input_number.cool_home_bedroom_asleep.state }}
            {% elif is_state('input_select.home_mode', 'Sleep') %}
              {{ states.input_number.cool_home_bedroom_asleep.state }}
            {% else %}
              {{ states.input_number.cool_home_bedroom_awake.state }}
            {% endif %}
          {% else %}
            {{ states.input_number.cool_away_bedroom_away.state }}
          {% endif %}

- id: climate_set_temperatures_heating
  alias: Set heating temperature based on presence
  trigger:
    - platform: state
      entity_id: input_select.presence
    - platform: state
      entity_id: input_select.home_mode
  condition:
    - condition: state
      entity_id: input_select.hvac_mode
      state: "heating"
  action:
    - service: climate.set_temperature
      entity_id: climate.living_room_thermostat_heat
      data_template:
        temperature: >-
          {% if is_state('input_select.presence', 'Home') %}
            {% if is_state('input_select.home_mode', 'Sleep') %}
              {{ states.input_number.heat_away_living_room_asleep.state }}
            {% else %}
              {{ states.input_number.heat_home_living_room_awake.state }}
            {% endif %}
          {% else %}
            {{ states.input_number.heat_away_bedroom_away.state }}
          {% endif %}
    - service: climate.set_temperature
      entity_id: climate.bedroom_thermostat_heat
      data_template:
        temperature: >-
          {% if is_state('input_select.presence', 'Home') %}
            {% if is_state('input_select.home_mode', 'Quiet') %}
              {{ states.input_number.heat_away_bedroom_asleep.state }}
            {% elif is_state('input_select.home_mode', 'Sleep') %}
              {{ states.input_number.heat_away_bedroom_asleep.state }}
            {% else %}
              {{ states.input_number.heat_home_bedroom_awake.state }}
            {% endif %}
          {% else %}
            {{ states.input_number.heat_away_bedroom_away.state }}
          {% endif %}
# TODO If virtual setting more extreme use that instead of +-2
# TODO Trigger by gocontrol temp change as well

# Livingroom cooling automation
- id: climate_cool_from_remote_living_room
  alias: Cool living room from remote sensor
  trigger:
    - platform: state
      entity_id: sensor.living_room_average_temperature
    - platform: state
      entity_id: climate.living_room_thermostat_cool
    - platform: state
      entity_id: climate.gocontrol_thermostat_bedroom_heating_setpoint
    - platform: state
      entity_id: input_select.presence
    - platform: state
      entity_id: input_select.home_mode
  action:
    - service: climate.set_temperature
      entity_id: climate.gocontrol_thermostat_living_room_cooling_setpoint
      data_template:
        temperature: >-
          {% if is_state('input_select.hvac_mode', 'cooling') %}
            {% if is_state('climate.living_room_thermostat_cool', 'cool') %}
              {{ float(states.climate.gocontrol_thermostat_living_room_cooling_setpoint.attributes.current_temperature) - 2 }}
            {% else %}
              {{ float(states.climate.gocontrol_thermostat_living_room_cooling_setpoint.attributes.current_temperature) + 2 }}
            {% endif %}
          {% else %}
            85
          {% endif %}

# Livingroom heating automation
- id: climate_heat_from_remote_living_room
  alias: Heat living room from remote sensor
  trigger:
    - platform: state
      entity_id: sensor.living_room_average_temperature
    - platform: state
      entity_id: climate.living_room_thermostat_heat
    - platform: state
      entity_id: climate.gocontrol_thermostat_living_room_heating_setpoint
    - platform: state
      entity_id: input_select.presence
    - platform: state
      entity_id: input_select.home_mode
  action:
    - service: climate.set_temperature
      entity_id: climate.gocontrol_thermostat_living_room_heating_setpoint
      data_template:
        temperature: >-
          {% if is_state('input_select.hvac_mode', 'heating') %}
            {% if is_state('climate.living_room_thermostat_heat', 'heat') %}
              {{ float(states.climate.gocontrol_thermostat_living_room_heating_setpoint.attributes.current_temperature) + 2 }}
            {% else %}
              {{ float(states.climate.gocontrol_thermostat_living_room_heating_setpoint.attributes.current_temperature) - 2 }}
            {% endif %}
          {% else %}
            60
          {% endif %}

# Bedroom cooling automation
- id: climate_cool_from_remote_bedroom
  alias: Cool living room from remote sensor
  trigger:
    - platform: state
      entity_id: sensor.bedroom_average_temperature
    - platform: state
      entity_id: climate.bedroom_thermostat_cool
    - platform: state
      entity_id: input_select.presence
    - platform: state
      entity_id: input_select.home_mode
  action:
    - service: climate.set_temperature
      entity_id: climate.gocontrol_thermostat_bedroom_cooling
      data_template:
        temperature: >-
          {% if is_state('input_select.hvac_mode', 'cooling') %}
            {% if is_state('climate.bedroom_thermostat_cool', 'cool') %}
              {{ float(states.climate.gocontrol_thermostat_bedroom_cooling.attributes.current_temperature) - 2 }}
            {% else %}
              {{ float(states.climate.gocontrol_thermostat_bedroom_cooling.attributes.current_temperature) + 2 }}
            {% endif %}
          {% else %}
            85
          {% endif %}

# Bedroom heating automation
- id: climate_heat_from_remote_bedroom
  alias: Heat living room from remote sensor
  trigger:
    - platform: state
      entity_id: sensor.bedroom_average_temperature
    - platform: state
      entity_id: climate.bedroom_thermostat_heat
    - platform: state
      entity_id: input_select.presence
    - platform: state
      entity_id: input_select.home_mode
  action:
    - service: climate.set_temperature
      entity_id: climate.gocontrol_thermostat_bedroom_heating
      data_template:
        temperature: >-
          {% if is_state('input_select.hvac_mode', 'heating') %}
            {% if is_state('climate.bedroom_thermostat_heat', 'heat') %}
              {{ float(states.climate.gocontrol_thermostat_bedroom_heating.attributes.current_temperature) + 2 }}
            {% else %}
              {{ float(states.climate.gocontrol_thermostat_bedroom_heating.attributes.current_temperature) - 2 }}
            {% endif %}
          {% else %}
            65
          {% endif %}

## Humidity Control/Warning
# TODO should this be an alert or should it trigger one?
# - id: climate_humidity_nofify
#   alias: Notify of humidity levels
#   trigger:
#     - platform: state
#       entity_id: sensor.all_rooms_humidity
#     - platform: state
#       entity_id: sensor.aeotec_humidifier_bedroom_power
#     - platform: state
#       entity_id: input_select.home_mode
#     - platform: state
#       entity_id: input_select.presence
#   condition:
#     condition: and
#     conditions:
#       - condition: state
#         entity_id: sensor.aeotec_humidifier_bedroom_power
#         below: 300
#       - condition: state
#         entity_id: sensor.all_rooms_humidity
#         below: 45
#       - condition: state
#         entity_id: input_select.presence
#         state: "Home"
#       -  condition: or
#         conditions:
#           - condition: state
#             entity_id: input_select.home_mode
#             state: "Normal"
#           - condition: state
#             entity_id: input_select.home_mode
#             state: "Quiet"
#   action:
#     - service: notify.notify
#       data_template:
#         message: >-
#           Check humidifier. Humidity is at {{ states.sensor.all_rooms_humidity.state }}%


## LIGHTING ##
- id: bedroom_lights_on_motion
  alias: Turn on bedroom lights when motion sensed
  trigger:
    - platform: state
      entity_id: sensor.bedroom_sensor_motion
      from: "inactive"
      to: "active"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_select.presence
        state: "Home"
      - condition: state
        entity_id: input_select.home_mode
        state: "Normal"
      - condition: time
        after: "10:00:00"
        before: "21:00:00"
  action:
    - service: light.turn_on
      data:
        brightness: 100
        entity_id: group.bedroom

# turn on aquarium light
- id: pea_puff_aquarium_light_timer_on
  alias: Pea Puff Light Timer On
  trigger:
    - platform: time
      at: "7:00:00"
    - platform: time
      at: "16:00:00"
  action:
    - service: light.turn_on
      entity_id: light.aquarium_light

# turn off aquarium light
- id: pea_puff_aquarium_light_timer_off
  alias: Pea Puff Light Timer Off
  trigger:
    - platform: time
      at: "12:00:00"
    - platform: time
      at: "21:00:00"
  action:
    - service: light.turn_off
      entity_id: light.aquarium_light

## ROUTINE ##
# prep the morning
- id: make_the_coffee_automation
  alias: Run make the coffee at 6am
  trigger:
    - platform: time
      at: "6:30:00" 
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_select.presence
        state: "Home"
      - condition: state
        entity_id: input_select.home_mode
        state: "Sleep"
      - condition: time
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
  action:
    - service: script.makecoffee

# prep the morning
- id: make_the_coffee_automation_weekend
  alias: Run make the coffee when motion
  trigger:
    - platform: state
      entity_id: sensor.bedroom_sensor_motion
      from: "inactive"
      to: "active"
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_select.presence
        state: "Home"
      - condition: state
        entity_id: input_select.home_mode
        state: "Sleep"
      - condition: time
        after: "6:30:00" 
      - condition: time
        weekday:
          - sat
          - sun
  action:
    - service: script.makecoffee

# time to wakeup
- id: good_morning_automation
  alias: Run goodmorning at 8am
  trigger:
    - platform: time
      at: "8:00:00" 
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_select.presence
        state: "Home"
      - condition: state
        entity_id: input_select.home_mode
        state: "Sleep"
      - condition: time
        weekday:
          - mon
          - tue
          - wed
          - thu
          - fri
  action:
    - service: script.goodmorning


## SECURITY ##
- id: arm_when_away
  alias: Arm Home When Away
  trigger:
    - platform: state
      entity_id: input_select.presence
      from: "Home"
      to: "Away"
  # action:
  #   - service: alarm_control_panel.alarm_arm_away
  #     data:
  #       entity_id: alarm_control_panel.grand_ohio
  action:
    - service: ifttt.trigger
      data: {"event":"home_armed"}
    - service: notify.notify
      data:
        message: "System is armed"
- id: disarm_when_home
  alias: Disarm Home When Home
  trigger:
    - platform: state
      entity_id: input_select.presence
      from: "Away"
      to: "Home"
  # Disabled due to long reload
  # action:
  #   - service: alarm_control_panel.alarm_disarm
  #     data:
  #       entity_id: alarm_control_panel.grand_ohio
  # Using IFTTT to arm temporarily
  action:
    - service: ifttt.trigger
      data: {"event":"home_disarmed"}
    - service: notify.notify
      data:
        message: "System is disarmed"
    
- id: alert_when_wet
  alias: Send Alert When Water Detected
  trigger:
    - platform: state
      entity_id:
        - sensor.water_leak_sensor_water
      from: 'dry'
      to: 'wet'
  action:
    - service: notify.notify
      data:
        message: >-
          {{ trigger.to_state.attributes.friendly }} detected water!

- id: alert_when_motion
  alias: Send Alert When Motion And Away
  trigger:
    - platform: state
      entity_id: sensor.bedroom_sensor_motion
      to: "active"
    - platform: state
      entity_id: sensor.aeotec_multisensor_burglar_living_room
      above: 3
  condition:
    - condition: state
      entity_id: input_select.presence
      state: "Away"
  action:
    - service: input_boolean.turn_on
      entity_id: input_boolean.motion_alert
    # - service: notify.notify
    #   data:
    #     message: >-
    #       Alert! {{ trigger.to_state.attributes.friendly }} detected motion

## STARTUP ##
- id: mqtt_startup_delay
  alias: MQTT Automation Startup Delay
  trigger:
    - platform: homeassistant
      event: start
  action:
    - delay:
        seconds: 30
    - service: input_boolean.turn_off
      data:
        entity_id: input_boolean.mqtt_delay
